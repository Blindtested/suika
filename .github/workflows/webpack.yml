name: Build wasm and then run Webpack

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  CARGO_TERM_COLOR: always
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: include wasm-bindgen
        uses: jetli/wasm-bindgen-action@v0.2.0
        with:
          version: '0.2.87'

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
               node-version: ${{ matrix.node-version }}

      - name: NPM build
        run: |
          npm install
          rustup target add wasm32-unknown-unknown
          npm run build:all
        
      - name: Setup Pages
        uses: actions/configure-pages@v3
    
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2